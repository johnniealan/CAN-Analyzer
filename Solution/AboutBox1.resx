<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>